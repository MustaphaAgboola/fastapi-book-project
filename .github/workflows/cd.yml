name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install NGINX if not already installed
            if ! command -v nginx &> /dev/null; then
                sudo apt-get update
                sudo apt-get install -y nginx
            fi
            
            # Create NGINX configuration
            sudo tee /etc/nginx/sites-available/fastapi << EOL
            server {
                listen 80;
                server_name \$host;

                location / {
                    proxy_pass http://localhost:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOL
            
            # Enable the site
            sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
            
            # Remove default nginx site
            sudo rm -f /etc/nginx/sites-enabled/default
            
            # Test NGINX configuration
            sudo nginx -t
            
            # Reload NGINX to apply changes
            sudo systemctl reload nginx
            
            # Pull the latest image
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest
            
            # Stop and remove existing container
            sudo docker stop fastapi-app || true
            sudo docker rm fastapi-app || true
            
            # Run new container
            sudo docker run -d \
              --name fastapi-app \
              --restart unless-stopped \
              -p 8000:8000 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-app:latest
            
            # Ensure NGINX is running
            sudo systemctl status nginx